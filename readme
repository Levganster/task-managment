# Task Management

## О проекте

**Task Management** — это веб-приложение для управления задачами, разработанное с использованием **FastAPI**, **SQLAlchemy** и **Alembic**. Приложение позволяет пользователям регистрироваться, входить в систему, создавать, редактировать, удалять и отмечать задачи как выполненные. Выполненные задачи отображаются серым цветом и остаются на своих местах в списке.

### Основные возможности

- **Регистрация и аутентификация пользователей**
- **Создание, редактирование и удаление задач**
- **Отметка задач как выполненных**
- **Отображение задач по пользователям**
- **Адаптивный интерфейс с использованием Bootstrap**

## Технологии

- **Backend**
  - Python 3.12
  - FastAPI
  - SQLAlchemy
  - Alembic
  - PostgreSQL
  - Pydantic
  - JWT для аутентификации
- **Frontend**
  - HTML5
  - CSS3
  - JavaScript
  - Bootstrap 5

## Установка

### Предварительные требования

- **Python 3.12**: Убедитесь, что Python установлен на вашем компьютере. Скачать можно с [официального сайта](https://www.python.org/downloads/).
- **PostgreSQL**: Необходима установленная и настроенная база данных PostgreSQL. Скачать можно с [официального сайта](https://www.postgresql.org/download/).
- **Git**: Для клонирования репозитория. Скачать можно с [официального сайта](https://git-scm.com/downloads).

### Шаги по установке

1. **Клонируйте репозиторий**

    ```bash
    git clone https://github.com/Levganster/task-management.git
    cd task-management
    ```

2. **Создайте и активируйте виртуальное окружение**

    ```bash
    python -m venv venv
    ```

    - **Windows:**

        ```bash
        venv\Scripts\activate
        ```

    - **macOS и Linux:**

        ```bash
        source venv/bin/activate
        ```

3. **Установите зависимости**

    ```bash
    pip install --upgrade pip
    pip install -r requirements.txt
    ```

4. **Настройте переменные среды**

    Создайте файл `.env` в корне проекта и добавьте следующие переменные:

    ```env
    DATABASE_URL=postgresql://username:password@localhost:5432/task_management_db
    SECRET_KEY=your_secret_key
    ```

    - **DATABASE_URL**: строка подключения к вашей базе данных PostgreSQL.
    - **SECRET_KEY**: секретный ключ для JWT аутентификации. Вы можете сгенерировать его с помощью Python:

        ```python
        import secrets
        print(secrets.token_urlsafe(32))
        ```

5. **Создайте базу данных**

    Убедитесь, что база данных, указанная в `DATABASE_URL`, существует. Если нет, создайте её:

    ```bash
    psql -U your_username
    CREATE DATABASE task_management_db;
    ```

6. **Запустите миграции Alembic**

    ```bash
    alembic upgrade head
    ```

7. **Запустите сервер FastAPI**

    ```bash
    uvicorn app.main:app --reload
    ```

    Сервер будет доступен по адресу [http://localhost:8000](http://localhost:8000).

## Использование

    - **Создание задачи**: Нажмите кнопку "Добавить задачу" и заполните форму.
    - **Редактирование задачи**: Нажмите кнопку "Редактировать" рядом с задачей.
    - **Удаление задачи**: Нажмите кнопку "Удалить" рядом с задачей.
    - **Отметка как выполненной**: Поставьте галочку рядом с задачей, чтобы отметить её как выполненную.

## Дополнительная информация

- **Миграции базы данных**: Для создания новых миграций используйте команду:

    ```bash
    alembic revision --autogenerate -m "описание миграции"
    ```

    Затем примените миграции:

    ```bash
    alembic upgrade head
    ```

- **Деплоймент**: Для развёртывания приложения в продакшен-окружении рекомендуется использовать серверы ASGI, такие как **Gunicorn**, вместе с **Uvicorn**.